name: Inject Network Latency Experiment

on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  inject-network-latency:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Retrieve the latest FIS Experiment Template ID
        id: get_template_id
        run: |
          TEMPLATE_ID=$(aws fis list-experiment-templates --query "experimentTemplates[?description=='Experiment to inject network latency on EC2 test instance'] | sort_by(@, &creationTime)[-1].id" --output text)
          if [ -z "$TEMPLATE_ID" ] || [ "$TEMPLATE_ID" == "None" ]; then
            echo "No existing template found. Creating a new one."
            echo "template_id=new" >> $GITHUB_OUTPUT
          else
            echo "Using existing template: $TEMPLATE_ID"
            echo "template_id=$TEMPLATE_ID" >> $GITHUB_OUTPUT
          fi

      - name: Replace placeholders in FIS template
        if: steps.get_template_id.outputs.template_id == 'new'
        run: |
          sed -e "s/\${AWS_REGION}/${{ secrets.AWS_REGION }}/g" \
              -e "s/\${AWS_ACCOUNT_ID}/${{ secrets.AWS_ACCOUNT_ID }}/g" \
              -e "s/\${INSTANCE_ID}/${{ secrets.INSTANCE_ID }}/g" \
              -e "s/\${IAM_ROLE}/${{ secrets.IAM_ROLE }}/g" \
              fis-templates/inject-network-latency.json > fis-templates/inject-network-latency-processed.json

      - name: Create FIS Experiment Template for Inject Network Latency
        if: steps.get_template_id.outputs.template_id == 'new'
        run: |
          TEMPLATE_ID=$(aws fis create-experiment-template --cli-input-json file://fis-templates/inject-network-latency-processed.json --query 'experimentTemplate.id' --output text)
          echo "Created new template: $TEMPLATE_ID"
          echo "template_id=$TEMPLATE_ID" >> $GITHUB_OUTPUT

      - name: Start FIS Experiment
        run: |
          TEMPLATE_ID=${{ steps.get_template_id.outputs.template_id }}
          if [ "$TEMPLATE_ID" == "new" ]; then
            TEMPLATE_ID=$(aws fis create-experiment-template --cli-input-json file://fis-templates/inject-network-latency-processed.json --query 'experimentTemplate.id' --output text)
          fi
          echo "Starting FIS experiment with TEMPLATE_ID: $TEMPLATE_ID"
          aws fis start-experiment --experiment-template-id $TEMPLATE_ID
          sleep 900 # Wait for 15 minutes to let the experiment complete

      - name: Detect Network Latency Issues
        run: python scripts/detect_network_latency_issues.py
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLOUDWATCH_ALARM_NAME: ${{ secrets.CLOUDWATCH_ALARM_NAME }}
